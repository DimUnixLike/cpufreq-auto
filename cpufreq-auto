#!/bin/bash

################################################################################
#####	This program will get info from "sensors" and "cpufreq-info"
#####	On finish version u will put "temp" that CPU will try to work at
##### For now... you need type how many Hertz on numbers to downclock
#####	*Not Finished yet (and maybe never)
#####	**Use only if you know what are u doing .ALFA STAGE
################################################################################

#Começar a corrigir isso pra automatico ou procentagem na proxima vez
declare -i underclock=1500000 #Clock Abaixo desejado por quanto nao é automatico

declare -i clocklow=0 #Clock minimo para cpu rodar
declare -i clockhigh=0 #Maximo que a cpu pode chegar
declare -i numerocpu=0 #Começa contar de 0 o numero de nucleos

GETUNDER(){
  echo "Digite o underclock desejado: (Ex: 1500000 (for 1.5ghz to underclock the cpu))"
  read underclock
}

AUTODADOS(){
    cpufreq-info > cpu.info
    numerocpu=$(cpufreq-info | grep -c "limites") # -c conta o numero de linhas no grep / FUNCIONANDO
    IN=$(cpufreq-info -l)
    frequencias=$(echo $IN | tr " " "\n")
    declare -i contador=0
    for clocks in $frequencias
    do
      echo "> $clocks"
      if [ $contador = 0 ]
      then
          contador+=1
          clocklow=$clocks
      else
          clockhigh=$clocks-$underclock
      fi
    done
}

SENSORS(){
  sensor=$(sensors -A | grep "Package id")
  temperaturaPack=$(echo $IN | tr " " "\n")
  #inacabado
}

CPU(){
	declare -i countercpu=0
	declare -i counterlimite=$numerocpu-1
	while [ $countercpu -le $counterlimite ]; do
		cpufreq-set -c $countercpu -d $clocklow
		cpufreq-set -c $countercpu -u $clockhigh
		countercpu+=1
	done
}

MAIN(){
	AUTODADOS
	CPU
}

MAIN
